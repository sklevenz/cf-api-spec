type: object
allOf:
  - $ref: ./baseSchema.yaml
  - properties:
      state:
        type: string
        description: State of the build; valid states are STAGING, STAGED, or FAILED
      staging_memory_in_mb:
        type: integer
        description: Memory in MB allocated for staging of the build
      staging_disk_in_mb:
        type: integer
        description: Disk space in MB allocated for staging of the build
      staging_log_rate_limit_bytes_per_second:
        type: integer
        description: Log rate limit in bytes per second allocated for staging of the build
      error:
        type: string
        description: A string describing errors during the build process
      lifecycle:
        $ref: ./lifecycle.yaml
      checksum:
        type: object
        properties:
          type:
            type: string
            description: >-
              Hashing algorithm for checksum; supported algorithms are sha256
              and sha1
          value:
            type: string
            description: Checksum of build
      metadata:
        $ref: ./metadata.yaml
      relationships:
        $ref: ./relationships.yaml
      droplet:
        $ref: ./relationshipToOne.yaml
      created_by:
        type: object
        properties:
          guid:
            type: string
            description: The GUID of the user that created the build
          name:
            type: string
            description: The name of the user that created the build
          email:
            type: string
            description: The email of the user that created the build
      links:
        $ref: ./links.yaml
description: >
  Builds represent the process of transforming source code into a runnable
  artifact. Builds can be triggered manually or automatically as part of the app
  lifecycle. A successful build results in a droplet that can be used to run the
  app.
