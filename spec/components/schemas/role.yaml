allOf:
  - $ref: ./baseSchema.yaml
type: object
properties:
  type:
    type: string
    description: >-
      Role type. Possible values are:

      - `organization_user`: A user in the organization

      - `organization_auditor`: An auditor in the organization

      - `organization_manager`: A manager in the organization

      - `organization_billing_manager`: A billing manager in the organization

      - `space_auditor`: An auditor in the space

      - `space_developer`: A developer in the space

      - `space_manager`: A manager in the space

      - `space_supporter`: A supporter in the space (not authorized to use the
      V2 API)
    enum:
      - organization_user
      - organization_auditor
      - organization_manager
      - organization_billing_manager
      - space_auditor
      - space_developer
      - space_manager
      - space_supporter
  relationships:
    allOf:
      - $ref: ./relationships.yaml
    properties:
      organization:
        allOf:
          - $ref: ./relationshipToOne.yaml
          - description: >
              A relationship to the organization the role controls access to;
              when this is a space role, `organization.data` will be `null`.
      space:
        allOf:
          - $ref: ./relationshipToOne.yaml
          - description: >
              A relationship to the space the role controls access to; when this
              is an organization role, `space.data` will be `null`.
      user:
        allOf:
          - $ref: ./relationshipToOne.yaml
          - description: |
              A relationship to the user; this is the user that has the role
description: >
  Roles represent a set of permissions that can be granted to users. Roles are
  represented as a JSON object.

  A role consists of several required role fields and other attributes specific
  to the role.

  See Roles for specific roles.
